{
    "orgInum":"%(inumOrg)s",
    "orgIname":"",
    "orgSupportEmail":"%(admin_email)s",

    "applianceInum":"%(inumAppliance)s",

    "baseDN":"o=gluu",

    "baseEndpoint":"https://%(hostname)s/identity/seam/resource/restv1",

    "idpUrl":"https://%(hostname)s",
    "applianceUrl":"https://%(hostname)s",

    "keystorePath":"%(shibJksFn)s",
    "keystorePassword":"%(shibJksPass)s",

    "personObjectClassTypes":[
        "gluuCustomPerson",
        "gluuPerson",
        "eduPerson"
    ],
    "personObjectClassDisplayNames":[
        "gluuCustomPerson",
        "gluuPerson",
        "eduPerson"
    ],

    "svnConfigurationStoreRoot":"unused",
    "svnConfigurationStorePassword":"unused",
    "persistSVN":false,

    "allowPersonModification":true,
    "updateApplianceStatus":true,

    "clientAssociationAttribute":"inum",

    "personCustomObjectClass":"gluuCustomPerson",

    "contactObjectClassTypes":[

    ],
    "contactObjectClassDisplayNames":[

    ],

    "photoRepositoryRootDir":"/var/ox/photos",
    "photoRepositoryThumbWidth":300,
    "photoRepositoryThumbHeight":300,
    "photoRepositoryCountLeveles":3,
    "photoRepositoryCountFoldersPerLevel":20,

    "shibboleth3FederationRootDir":"/opt/shibboleth-federation",

    "velocityLog":"%(jetty_base)s/identity/logs/velocity.log",

    "spMetadataPath":"",

    "logoLocation":"/var/ox/photos",

    "gluuSpAttributes":[

    ],

    "configGeneration":%(oxTrustConfigGeneration)s,
    "ignoreValidation":false,

    "idpSecurityCert":"/etc/certs/shibIDP.crt",
    "idpSecurityKey":"/etc/certs/shibIDP.key",
    "idpSecurityKeyPassword":"%(encoded_shib_jks_pw)s",
    "gluuSpCert":"/etc/certs/shibIDP.crt",

    "idpBindDn":"cn=Directory Manager",
    "idpBindPassword":"%(encoded_ox_ldap_pw)s",
    "idpLdapProtocol":"ldaps",
    "idpLdapServer":"%(ldap_hostname):%(ldaps_port)",
    "idpUserFields":"",

    "ldifStore":"/var/ox/identity/removed",

    "caCertsLocation":"/usr/java/latest/jre/lib/security/cacerts",
    "caCertsPassphrase":"",

    "certDir":"/etc/certs/",
    "tempCertDir":"/etc/certs/temp",

    "clusteredInums":[

    ],

    "servicesRestartTrigger":"/opt/gluu/essential_files/trigger_restart_of_services_delete_me_to_do_so",

    "oxAuthIssuer":"https://%(hostname)s",
    "oxAuthSectorIdentifierUrl":"https://%(hostname)s/oxauth/sectoridentifier",

    "oxAuthClientId":"%(oxauth_client_id)s",
    "oxAuthClientPassword":"%(oxauthClient_encoded_pw)s",
    "oxAuthClientScope":"openid+profile+email+user_name",

    "loginRedirectUrl":"https://%(hostname)s/identity/authentication/authcode",
    "logoutRedirectUrl":"https://%(hostname)s/identity/authentication/finishlogout",

    "umaIssuer":"https://%(hostname)s",

    "scimUmaClientId":"%(scim_rs_client_id)s",
    "scimUmaClientKeyId":"",
    "scimUmaResourceId":"1447184268430",
    "scimUmaScope":"https://%(hostname)s/oxauth/seam/resource/restv1/uma/scopes/scim_access",
    "scimUmaClientKeyStoreFile":"%(scim_rs_client_jks_fn)s",
    "scimUmaClientKeyStorePassword":"%(scim_rs_client_jks_pass_encoded)s",

    "passportUmaClientId":"%(passport_rs_client_id)s",
    "passportUmaClientKeyId":"",
    "passportUmaResourceId":"1447184268440",
    "passportUmaScope":"https://%(hostname)s/oxauth/seam/resource/restv1/uma/scopes/passport_access",
    "passportUmaClientKeyStoreFile":"%(passport_rs_client_jks_fn)s",
    "passportUmaClientKeyStorePassword":"%(passport_rs_client_jks_pass_encoded)s",

    "cssLocation":"",
    "jsLocation":"",

    "rptConnectionPoolUseConnectionPooling":false,
    "rptConnectionPoolMaxTotal":200,
    "rptConnectionPoolDefaultMaxPerRoute":20,
    "rptConnectionPoolValidateAfterInactivity":10,
    "rptConnectionPoolCustomKeepAliveTimeout":5,

    "scimTestMode":false,
    "scimTestModeAccessToken":"",

    "shibbolethVersion":"%(shibboleth_version)s",
    "shibboleth3IdpRootDir":"%(idp3Folder)s",
    "shibboleth3SpConfDir":"%(idp3Folder)s/sp",
    "organizationName":"%(orgName)s",
    "idp3SigningCert":"/etc/certs/idp-signing.crt",
    "idp3EncryptionCert":"/etc/certs/idp-encryption.crt",

    "clientWhiteList": ["*"],
    "clientBlackList": ["*.attacker.com/*"]
}
